{
  "version": 3,
  "sources": ["../../../worker.js", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-scheduled.ts", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-7K2YQ6/middleware-insertion-facade.js", "../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-7K2YQ6/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/velrabe/Documents/air-monitoring-andijan/.wrangler/tmp/dev-mP5uRZ",
  "sourcesContent": ["// Cloudflare Worker \u0434\u043B\u044F \u043C\u043E\u043D\u0438\u0442\u043E\u0440\u0438\u043D\u0433\u0430 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u043E\u0437\u0434\u0443\u0445\u0430 \u0432 \u0410\u043D\u0434\u0438\u0436\u0430\u043D\u0435\nconst MONITORING_URL = \"https://monitoring.meteo.uz/ru/map/view/724\";\n\n// \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u043E \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0432\u043E\u0437\u0434\u0443\u0445\u0430\nasync function fetchAirQualityData() {\n  try {\n    const response = await fetch(MONITORING_URL, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}`);\n    }\n    \n    const html = await response.text();\n    \n    // \u041F\u0430\u0440\u0441\u0438\u043C \u0434\u0430\u043D\u043D\u044B\u0435 PM 2.5 \u0438 PM 10 \u0438\u0437 HTML\n    // \u0418\u0449\u0435\u043C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F \u043F\u043E\u0441\u043B\u0435 PM 2.5: \u0438 PM 10:\n    const pm25Match = html.match(/PM 2\\.5:.*?(\\d+\\.?\\d*)/);\n    const pm10Match = html.match(/PM 10:.*?(\\d+\\.?\\d*)/);\n    \n    if (!pm25Match || !pm10Match) {\n      console.log('HTML content preview:', html.substring(0, 1000));\n      throw new Error('\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0439\u0442\u0438 \u0434\u0430\u043D\u043D\u044B\u0435 PM 2.5 \u0438\u043B\u0438 PM 10');\n    }\n    \n    const pm25 = parseFloat(pm25Match[1]);\n    const pm10 = parseFloat(pm10Match[1]);\n    \n    return {\n      PM25: pm25,\n      PM10: pm10,\n      timestamp: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0438 \u0434\u0430\u043D\u043D\u044B\u0445:', error);\n    return null;\n  }\n}\n\n// \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u043E\u0437\u0434\u0443\u0445\u0430\nfunction getAirQualityLevel(pm25, pm10) {\n  if (pm25 <= 12 && pm10 <= 54) {\n    return [\"\u0425\u043E\u0440\u043E\u0448\u043E\", \"\uD83D\uDFE2\"];\n  } else if (pm25 <= 35.4 && pm10 <= 154) {\n    return [\"\u0423\u043C\u0435\u0440\u0435\u043D\u043D\u043E\", \"\uD83D\uDFE1\"];\n  } else if (pm25 <= 55.4 && pm10 <= 254) {\n    return [\"\u0412\u0440\u0435\u0434\u043D\u043E \u0434\u043B\u044F \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0445\", \"\uD83D\uDFE0\"];\n  } else if (pm25 <= 150.4 && pm10 <= 354) {\n    return [\"\u0412\u0440\u0435\u0434\u043D\u043E\", \"\uD83D\uDD34\"];\n  } else if (pm25 <= 250.4 && pm10 <= 424) {\n    return [\"\u041E\u0447\u0435\u043D\u044C \u0432\u0440\u0435\u0434\u043D\u043E\", \"\uD83D\uDFE3\"];\n  } else {\n    return [\"\u041E\u043F\u0430\u0441\u043D\u043E\", \"\uD83D\uDFE4\"];\n  }\n}\n\n// \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u044D\u043C\u043E\u0434\u0437\u0438 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0439\nfunction getChangeEmoji(current, previous) {\n  if (previous === null || previous === undefined) {\n    return \"\";\n  }\n  \n  if (current > previous) {\n    return \" \uD83D\uDD3C\";\n  } else if (current < previous) {\n    return \" \uD83D\uDD3D\";\n  } else {\n    return \" \u23FA\uFE0F\";\n  }\n}\n\n// \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F \u0432 Telegram\nasync function sendTelegramMessage(message, botToken, chatId) {\n  const url = `https://api.telegram.org/bot${botToken}/sendMessage`;\n  \n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        chat_id: chatId,\n        text: message,\n        parse_mode: 'HTML'\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}`);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0435 \u0432 Telegram:', error);\n    return false;\n  }\n}\n\n// \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u0444\u043E\u0440\u043C\u0430\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F\nfunction formatMessage(currentData, previousData) {\n  const pm25 = currentData.PM25;\n  const pm10 = currentData.PM10;\n  \n  const [qualityLevel, qualityEmoji] = getAirQualityLevel(pm25, pm10);\n  \n  const pm25Emoji = getChangeEmoji(pm25, previousData?.PM25);\n  const pm10Emoji = getChangeEmoji(pm10, previousData?.PM10);\n  \n  const timestamp = new Date().toLocaleString('ru-RU', {\n    day: '2-digit',\n    month: '2-digit', \n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  });\n  \n  return `PM 2.5: ${pm25.toFixed(3)}${pm25Emoji} | PM 10: ${pm10.toFixed(3)}${pm10Emoji}\n\n${qualityLevel} ${qualityEmoji}\n\u041E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u043E: ${timestamp}`;\n}\n\n// \u041E\u0441\u043D\u043E\u0432\u043D\u0430\u044F \u0444\u0443\u043D\u043A\u0446\u0438\u044F Worker\nexport default {\n  async scheduled(event, env, ctx) {\n    // \u041F\u043E\u043B\u0443\u0447\u0430\u0435\u043C \u0434\u0430\u043D\u043D\u044B\u0435\n    const currentData = await fetchAirQualityData();\n    if (!currentData) {\n      console.log('\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0434\u0430\u043D\u043D\u044B\u0435');\n      return;\n    }\n    \n    // \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043C \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0438\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u0438\u0437 KV\n    const previousData = await env.AIR_DATA.get('previous', 'json');\n    \n    // \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F (\u043F\u043E\u0440\u043E\u0433 5.0)\n    const threshold = 5.0;\n    let shouldNotify = false;\n    \n    if (!previousData) {\n      // \u041F\u0435\u0440\u0432\u044B\u0439 \u0437\u0430\u043F\u0443\u0441\u043A\n      shouldNotify = true;\n      console.log('\u041F\u0435\u0440\u0432\u044B\u0439 \u0437\u0430\u043F\u0443\u0441\u043A - \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u043C \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u0435');\n    } else {\n      const pm25Changed = Math.abs(currentData.PM25 - previousData.PM25) > threshold;\n      const pm10Changed = Math.abs(currentData.PM10 - previousData.PM10) > threshold;\n      \n      if (pm25Changed || pm10Changed) {\n        shouldNotify = true;\n        console.log('\u041E\u0431\u043D\u0430\u0440\u0443\u0436\u0435\u043D\u044B \u0437\u043D\u0430\u0447\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0435 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F - \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u043C \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u0435');\n      } else {\n        console.log('\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u043D\u0435\u0437\u043D\u0430\u0447\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0435 - \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u0435 \u043D\u0435 \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u043C');\n      }\n    }\n    \n    // \u041E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u043C \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u0435 \u0435\u0441\u043B\u0438 \u043D\u0443\u0436\u043D\u043E\n    if (shouldNotify) {\n      const message = formatMessage(currentData, previousData);\n      const success = await sendTelegramMessage(\n        message, \n        env.TELEGRAM_BOT_TOKEN, \n        env.TELEGRAM_CHAT_ID\n      );\n      \n      if (success) {\n        console.log('\u0423\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u0435 \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u043E \u0443\u0441\u043F\u0435\u0448\u043D\u043E');\n      } else {\n        console.log('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0435 \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u044F');\n      }\n    }\n    \n    // \u0421\u043E\u0445\u0440\u0430\u043D\u044F\u0435\u043C \u0442\u0435\u043A\u0443\u0449\u0438\u0435 \u0434\u0430\u043D\u043D\u044B\u0435\n    await env.AIR_DATA.put('previous', JSON.stringify(currentData));\n    console.log('\u0414\u0430\u043D\u043D\u044B\u0435 \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u044B');\n  }\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\n// A middleware has to be a function of type Middleware\nconst scheduled: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\tconst url = new URL(request.url);\n\tif (url.pathname === \"/__scheduled\") {\n\t\tconst cron = url.searchParams.get(\"cron\") ?? \"\";\n\t\tawait middlewareCtx.dispatch(\"scheduled\", { cron });\n\n\t\treturn new Response(\"Ran scheduled event\");\n\t}\n\n\tconst resp = await middlewareCtx.next(request, env);\n\n\t// If you open the `/__scheduled` page in a browser, the browser will automatically make a request to `/favicon.ico`.\n\t// For scheduled Workers _without_ a fetch handler, this will result in a 500 response that clutters the log with unhelpful error messages.\n\t// To avoid this, inject a 404 response to favicon.ico loads on the `/__scheduled` page\n\tif (\n\t\trequest.headers.get(\"referer\")?.endsWith(\"/__scheduled\") &&\n\t\turl.pathname === \"/favicon.ico\" &&\n\t\tresp.status === 500\n\t) {\n\t\treturn new Response(null, { status: 404 });\n\t}\n\n\treturn resp;\n};\n\nexport default scheduled;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/velrabe/Documents/air-monitoring-andijan/worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-scheduled.ts\";\nimport * as __MIDDLEWARE_2__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/velrabe/Documents/air-monitoring-andijan/worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default,__MIDDLEWARE_2__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/velrabe/Documents/air-monitoring-andijan/.wrangler/tmp/bundle-7K2YQ6/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/velrabe/Documents/air-monitoring-andijan/.wrangler/tmp/bundle-7K2YQ6/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/velrabe/Documents/air-monitoring-andijan/.wrangler/tmp/bundle-7K2YQ6/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
