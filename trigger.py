#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ GitHub Actions —á–µ—Ä–µ–∑ API
"""

import requests
import os
import time
from datetime import datetime

# GitHub –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
GITHUB_TOKEN = os.environ.get('GITHUB_TOKEN')
GITHUB_REPO = "velrabe/air-monitoring-andijan"
WORKFLOW_FILE = "monitor.yml"

def trigger_workflow():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç GitHub Actions workflow —á–µ—Ä–µ–∑ API"""
    if not GITHUB_TOKEN:
        print("‚ùå GITHUB_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return False
    
    url = f"https://api.github.com/repos/{GITHUB_REPO}/actions/workflows/{WORKFLOW_FILE}/dispatches"
    
    headers = {
        "Authorization": f"token {GITHUB_TOKEN}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    data = {
        "ref": "main"
    }
    
    try:
        response = requests.post(url, headers=headers, json=data)
        
        if response.status_code == 204:
            print("‚úÖ Workflow –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ API")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"üöÄ –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ API: {datetime.now()}")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    try:
        import monitor
        monitor.main()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º workflow —á–µ—Ä–µ–∑ API
    trigger_workflow()

if __name__ == "__main__":
    main()
